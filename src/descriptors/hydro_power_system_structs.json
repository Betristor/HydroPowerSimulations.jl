{
    "auto_generated_structs": [
        {
            "struct_name": "HydroEnergyCascade",
            "fields": [
                {
                    "null_value": "init",
                    "name": "name",
                    "accessor_module": "InfrastructureSystems",
                    "data_type": "String"
                },
                {
                    "null_value": "false",
                    "name": "available",
                    "data_type": "Bool",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "bus",
                    "null_value": "PSY.Bus(nothing)",
                    "data_type": "PSY.Bus",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "active_power",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "reactive_power",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": "reactive_power_limits",
                    "validation_action": "warn",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "rating",
                    "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "prime_mover",
                    "comment": "Prime mover technology according to EIA 923",
                    "null_value": "PSY.PrimeMovers.HY",
                    "data_type": "PSY.PrimeMovers.PrimeMover",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "active_power_limits",
                    "null_value": "(min=0.0, max=0.0)",
                    "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "reactive_power_limits",
                    "validation_action": "warn",
                    "null_value": "nothing",
                    "data_type": "Union{Nothing, PSY.Min_Max}",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "ramp_limits",
                    "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
                    "null_value": "nothing",
                    "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "time_limits",
                    "comment": "Minimum up and Minimum down time limits in hours",
                    "null_value": "nothing",
                    "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "base_power",
                    "comment": "Base power of the unit in MVA",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "warn",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "storage_capacity",
                    "comment": "Maximum storage capacity in the reservoir (units can be p.u-hr or m^3).",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "inflow",
                    "comment": "Baseline inflow into the reservoir (units can be p.u. or m^3/hr)",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "initial_storage",
                    "comment": "Initial storage capacity in the reservoir (units can be p.u-hr or m^3).",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "operation_cost",
                    "null_value": "PSY.TwoPartCost(nothing)",
                    "data_type": "PSY.OperationalCost",
                    "default": "PSY.TwoPartCost(0.0, 0.0)",
                    "comment": "Operation Cost of Generation [`OperationalCost`](@ref)",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "storage_target",
                    "comment": "Storage target at the end of simulation as ratio of storage capacity.",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "default": "1.0",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "conversion_factor",
                    "comment": "Conversion factor from flow/volume to energy: m^3 -> p.u-hr.",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "default": "1.0",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "upstream",
                    "comment": "Upstream units, water lag, energy multiplier",
                    "null_value": "NamedTuple{(:unit, :lag, :multiplier), Tuple{PSY.HydroGen, Int64, Float64}}[]",
                    "default": "NamedTuple{(:unit, :lag, :multiplier), Tuple{PSY.HydroGen, Int64, Float64}}[]",
                    "data_type": "Vector{NamedTuple{(:unit, :lag, :multiplier), Tuple{PSY.HydroGen, Int64, Float64}}}"
                },
                {
                    "name": "services",
                    "data_type": "Vector{PSY.Service}",
                    "comment": "Services that this device contributes to",
                    "null_value": "PSY.Device[]",
                    "default": "PSY.Device[]",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "dynamic_injector",
                    "data_type": "Union{Nothing, PSY.DynamicInjection}",
                    "comment": "corresponding dynamic injection device",
                    "null_value": "nothing",
                    "exclude_setter": true,
                    "default": "nothing",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "ext",
                    "data_type": "Dict{String, Any}",
                    "null_value": "Dict{String, Any}()",
                    "default": "Dict{String, Any}()",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "forecasts",
                    "accessor_module": "InfrastructureSystems",
                    "comment": "internal forecast storage",
                    "null_value": "InfrastructureSystems.Forecasts()",
                    "data_type": "InfrastructureSystems.Forecasts",
                    "default": "InfrastructureSystems.Forecasts()"
                },
                {
                    "name": "internal",
                    "comment": "power system internal reference, do not modify",
                    "data_type": "IS.InfrastructureSystemsInternal",
                    "internal_default": "IS.InfrastructureSystemsInternal()",
                    "accessor_module": "PowerSystems"
                }
            ],
            "supertype": "HydroCascade"
        },
        {
            "struct_name": "HydroDispatchCascade",
            "fields": [
                {
                    "null_value": "init",
                    "name": "name",
                    "accessor_module": "InfrastructureSystems",
                    "data_type": "String"
                },
                {
                    "null_value": "false",
                    "name": "available",
                    "data_type": "Bool",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "bus",
                    "null_value": "PSY.Bus(nothing)",
                    "data_type": "PSY.Bus",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "active_power",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "reactive_power",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": "reactive_power_limits",
                    "validation_action": "warn",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "rating",
                    "comment": "Thermal limited MVA Power Output of the unit. <= Capacity",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "prime_mover",
                    "comment": "Prime mover technology according to EIA 923",
                    "null_value": "PSY.PrimeMovers.HY",
                    "data_type": "PSY.PrimeMovers.PrimeMover",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "active_power_limits",
                    "null_value": "(min=0.0, max=0.0)",
                    "data_type": "NamedTuple{(:min, :max), Tuple{Float64, Float64}}",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "reactive_power_limits",
                    "validation_action": "warn",
                    "null_value": "nothing",
                    "data_type": "Union{Nothing, PSY.Min_Max}",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "ramp_limits",
                    "comment": "ramp up and ramp down limits in MW (in component base per unit) per minute",
                    "null_value": "nothing",
                    "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "needs_conversion": true,
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "time_limits",
                    "comment": "Minimum up and Minimum down time limits in hours",
                    "null_value": "nothing",
                    "data_type": "Union{Nothing, NamedTuple{(:up, :down), Tuple{Float64, Float64}}}",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "error",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "base_power",
                    "comment": "Base power of the unit in MVA",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "valid_range": {
                        "min": 0,
                        "max": null
                    },
                    "validation_action": "warn",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "operation_cost",
                    "null_value": "PSY.TwoPartCost(nothing)",
                    "data_type": "PSY.OperationalCost",
                    "default": "PSY.TwoPartCost(0.0, 0.0)",
                    "comment": "Operation Cost of Generation [`OperationalCost`](@ref)",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "storage_target",
                    "comment": "Storage target at the end of simulation as ratio of storage capacity.",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "default": "1.0",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "conversion_factor",
                    "comment": "Conversion factor from flow/volume to energy: m^3 -> p.u-hr.",
                    "null_value": "0.0",
                    "data_type": "Float64",
                    "default": "1.0",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "upstream",
                    "comment": "Upstream units, water lag, energy multiplier",
                    "null_value": "NamedTuple{(:unit, :lag, :multiplier), Tuple{PSY.HydroGen, Int64, Float64}}[]",
                    "default": "NamedTuple{(:unit, :lag, :multiplier), Tuple{PSY.HydroGen, Int64, Float64}}[]",
                    "data_type": "Vector{NamedTuple{(:unit, :lag, :multiplier), Tuple{PSY.HydroGen, Int64, Float64}}}"
                },
                {
                    "name": "services",
                    "data_type": "Vector{PSY.Service}",
                    "comment": "Services that this device contributes to",
                    "null_value": "PSY.Device[]",
                    "default": "PSY.Device[]",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "dynamic_injector",
                    "data_type": "Union{Nothing, PSY.DynamicInjection}",
                    "comment": "corresponding dynamic injection device",
                    "null_value": "nothing",
                    "exclude_setter": true,
                    "default": "nothing",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "ext",
                    "data_type": "Dict{String, Any}",
                    "null_value": "Dict{String, Any}()",
                    "default": "Dict{String, Any}()",
                    "accessor_module": "PowerSystems"
                },
                {
                    "name": "forecasts",
                    "accessor_module": "InfrastructureSystems",
                    "comment": "internal forecast storage",
                    "null_value": "InfrastructureSystems.Forecasts()",
                    "data_type": "InfrastructureSystems.Forecasts",
                    "default": "InfrastructureSystems.Forecasts()"
                },
                {
                    "name": "internal",
                    "comment": "power system internal reference, do not modify",
                    "data_type": "IS.InfrastructureSystemsInternal",
                    "internal_default": "IS.InfrastructureSystemsInternal()",
                    "accessor_module": "PowerSystems"
                }
            ],
            "supertype": "HydroCascade"
        }
    ]
}